{"version":3,"sources":["Services/Persons.js","conponents/Person.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","status","Person","person","toggleDelete","content","name","number","onClick","App","useState","persons","setPersons","newName","setNewName","newNumb","setNewNumb","filtName","setFiltName","errorMessage","setErrorMessage","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","useEffect","personService","initialPersons","namesToShow","filter","toLowerCase","indexOf","border","value","onChange","event","target","onSubmit","preventDefault","reservName","map","item","includes","nameObject","window","confirm","find","concat","setTimeout","console","log","type","removedperson","n","toggleDeleteOf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7457feb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) =>{\r\n  const request = axios.delete( `${baseUrl}/${id}` );\r\n  return request.then( response => response.status );\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react'\r\n\r\nconst Person = ({ person, toggleDelete}) => {\r\n  \r\n    return (\r\n      <li>\r\n        {person.content}\r\n        {person.name} {person.number}\r\n        <button onClick={toggleDelete}>Delete</button>\r\n        </li>\r\n    )\r\n  }\r\n  \r\n  export default Person","import React, { useState, useEffect } from 'react'\r\nimport './index.css';\r\nimport personService from './Services/Persons'\r\nimport Person from './conponents/Person'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumb, setNewNumb ] = useState('')\r\n  const [ filtName, setFiltName ] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const Notification = ({ message }) => {\r\n    let errorstyle = {\r\n      color: 'green',\r\n      background: 'lightgrey',\r\n      fontSize: 20,\r\n      borderStyle: 'solid',\r\n      borderRadius: '5px',\r\n      padding: '10px',\r\n      marginBottom: '10px'\r\n    }\r\n\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={errorstyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //fletch persons-data from the server using Services/Persons module\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons =>{\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n  \r\n  const addName = (event) =>{\r\n    event.preventDefault()\r\n\r\n    const names = persons.map(item => item.name)\r\n    const reservName = names.includes(newName)\r\n\r\n    const nameObject = {name: newName, number: newNumb}\r\n    \r\n    if (reservName === true){\r\n      if (window.confirm(`${newName} is already added to phonebook, will old number replaced to new one?`)){\r\n        let id = persons.find(person => person.name == nameObject.name).id;\r\n        personService\r\n        .update(id, nameObject)\r\n        .then(response=> {\r\n          setPersons(persons.map(person => person.id !== id ? person : response.data))\r\n          setNewName(' ')\r\n          setNewNumb(' ')\r\n          })\r\n      }\r\n    } else personService\r\n      .create(nameObject)\r\n      .then(response => {\r\n        setPersons(persons.concat(nameObject))\r\n        setNewName(' ')\r\n        setNewNumb(' ')\r\n        setErrorMessage(\r\n          `${newName}' Added`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n    })\r\n  }\r\n      //delete person\r\n      const toggleDeleteOf = (id) => {\r\n        let removedperson = persons.find(n => n.id === id).name\r\n        //const changedPerson = { ...person, important: !note.important }//{ ... note} luo olion, jolla on kenttinään kopiot olion note kenttien arvoista\r\n        if (window.confirm( `Poistetaanko ${ removedperson }?` ) ){\r\n          personService\r\n          .remove( id )\r\n          .then( setPersons( persons.filter( person => person.id !== id ) ) );\r\n      }\r\n    }\r\n\r\n  const namesToShow = persons.filter(person=> person.name.toLowerCase().indexOf(filtName.toLowerCase()) === 0)\r\n\r\n  const handleNameChange = (event) =>{\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumbChange = (event) =>{\r\n    console.log(event.target.value)\r\n    setNewNumb(event.target.value)\r\n  }\r\n\r\n  const handleFilterchange = (event) => {   \r\n    //console.log(event.target.value)    \r\n    setFiltName(event.target.value)  \r\n  }\r\n\r\n  return (\r\n    <div style ={\r\n      {\r\n       border: '2px solid black'\r\n      }\r\n    }>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n          filter shown with <input value = {filtName}\r\n          onChange={handleFilterchange}/>\r\n        </div>\r\n      <form onSubmit={addName}>\r\n        <div>\r\n          name: <input value={newName} \r\n          onChange = {handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value ={newNumb}\r\n          onChange = {handleNumbChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n\r\n      <ul>\r\n        {namesToShow.map(person=> \r\n          <Person key= {person.id}\r\n          person = {person}\r\n          toggleDelete={() => toggleDeleteOf(person.id)}/>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}